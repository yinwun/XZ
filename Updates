2800 rows Parse_BC_StatusString(p);
2845 rows call back
4451
2017.7.24 DpMain.cpp
//锁定战宠
		if (nLockFightPet >= 0 && nLockFightPet <= 5)
		{
			if (bc_char[position].petpos > -1)
			{
				if (bc_char[position].petpos != (nLockFightPet - 1))
				{
					sprintf_s(cmd, "S|%s", nLockFightPet - 1);
					SendCommand(cmd);
				}
			}
			else
			{
				sprintf_s(cmd, "S|%s", nLockFightPet - 1);
				SendCommand(cmd);
			}
		}
2592
//锁战宠骑宠,//ridepet骑乘宠物编号,无骑宠为-1,//fightpet无战宠为-1,有战宠为其编号
			if(chardetail.ridepet==-1 && nLockRidePet>=1 && nLockRidePet<=5)
				SendRidePet(nLockRidePet-1);
			if (charotherinfo.fightpet == -1 && nLockFightPet >= 1 && nLockFightPet <= 5)//锁定战宠，打飞
			{
				SendPetState(nLockFightPet - 1, 1);
			}
			else 
			{
				if (nLockFightPet >= 1 && nLockFightPet <= 5)//锁定战宠
				{
					if (nLockRidePet == nLockFightPet)//骑战
					{
						if (charotherinfo.fightpet != (nLockFightPet - 1))//战宠不是骑宠
						{
							SendPetState(nLockFightPet - 1, 1);
						}
					}
					else//普通锁定战宠
					{
						SendFightPet(nLockFightPet - 1);
					}
				}
				
			}
DIPIDlg.cpp
298

				//new
				m_list.SetItemText(nRow, 4, szIP);
				m_list.SetItemText(nRow, 5, szPort);
				m_list.SetItemText(nRow, 6, szServerName);
			//}
		}
		f.Close();		
	}


catch(...){
	}
	//帐号处理
	g_userNum=m_list.GetItemCount();
	if(g_userNum>0){
		g_userinfo= new USERINFO[g_userNum];
		for(int i=0;i<g_userNum;i++){
			szAccount=m_list.GetItemText(i,0);
			szPwd=m_list.GetItemText(i,1);
			szSafeCode=m_list.GetItemText(i,2);
			szScript=m_list.GetItemText(i,3);
A|B|F|10|11|12|
			szIP = m_list.GetItemText(i, 4);
			szPort = m_list.GetItemText(i, 5);
			szServerName = m_list.GetItemText(i, 6);

			strcpy_s(g_userinfo[i].charname,szAccount);
			strcpy_s(g_userinfo[i].password,szPwd);
			strcpy_s(g_userinfo[i].safecode,szSafeCode);
			strcpy_s(g_userinfo[i].scriptName,szScript);			
			g_userinfo[i].index=i;

			
			//new
			HOSTENT *lpHostEnt;
			struct in_addr inAddr;
			LPSTR lpaddr;
			char ip[30];
			memset(ip, 0, sizeof(ip));
			strncpy_s(ip, szIP, szIP.GetLength());
			lpHostEnt = gethostbyname(ip);
			if (!lpHostEnt)return FALSE;
			lpaddr = lpHostEnt->h_addr_list[0];
			memmove(&inAddr, lpaddr, 4);
			sprintf_s(ip, "%d.%d.%d.%d", inAddr.S_un.S_addr & 0xff, (inAddr.S_un.S_addr >> 8) & 0xff, (inAddr.S_un.S_addr >> 16) & 0xff, (inAddr.S_un.S_addr >> 24) & 0xff);
			strcpy_s(g_userinfo[i].ip, ip);
			strcpy_s(g_userinfo[i].servername, szServerName);
			g_userinfo[i].port = atoi(szPort);
			
			typedef struct{
	char charname[30];
	char password[30];
	char safecode[30];
	int index;			//第几个帐号
	char scriptName[100];//脚本文件名
publicfunction.h
	char ip[30];
	int port;
	char servername[30];
}USERINFO;

DpMain.cpp
171
	//New
	user.port = puser->port;
	strcpy_s(user.servername, puser->servername);
	strcpy_s(user.ip, puser->ip);


	CString szMsg;
	NOTIFYPARA para;
	para.nNotityType=NOTIFY_MSG;
	//连接服务端
	if (!ConnectServer(socket, puser->ip, puser->port)){
	//敌人前排从上到下依次为(13，11，F，10，12)，敌人后排从上到下为(E,C,A,B,D)
		//我方宠物从上到下依次为（9，7，5，6，8），我方人员从上到下为(4,2,0,1,3)
A|B|F|10|11|12|

sendattch 4431
	char enemy[100];
	strcpy_s(enemy, "A|B|F|10|11|12|");

	char staticEnemylist[100];
	strcpy_s(staticEnemylist, "12|10|F|11|13|D|B|A|C|E|");

	char cenemy[100];
	char e[10];
	int pos = 0;
	memset(cenemy, 0, sizeof(cenemy));
	Tokenize(staticEnemylist, e, "|", pos);
	while (strlen(e) > 0){
		if (strstr(enemy, e) != NULL)
		{
			strcat_s(cenemy, e);
			strcat_s(cenemy, "|");
		}
		Tokenize(staticEnemylist, e, "|", pos);
		
	}
